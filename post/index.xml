<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on My New Hugo Site</title>
    <link>http://czr22.github.io/post/</link>
    <description>Recent content in Posts on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 31 Jul 2021 08:57:01 +0800</lastBuildDate><atom:link href="http://czr22.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Pyecharts基本操作</title>
      <link>http://czr22.github.io/post/pyecharts%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Sat, 31 Jul 2021 08:57:01 +0800</pubDate>
      
      <guid>http://czr22.github.io/post/pyecharts%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</guid>
      <description>Pyecharts基本操作 1. 地图 </description>
    </item>
    
    <item>
      <title>Django&#43;Vue2项目</title>
      <link>http://czr22.github.io/post/django&#43;vue2.x%E5%89%8D%E5%90%8E%E7%AB%AF%E4%BA%92%E9%80%9A/</link>
      <pubDate>Mon, 26 Jul 2021 15:46:42 +0800</pubDate>
      
      <guid>http://czr22.github.io/post/django&#43;vue2.x%E5%89%8D%E5%90%8E%E7%AB%AF%E4%BA%92%E9%80%9A/</guid>
      <description>一、创建基础框架  建立Django项目  $ django-admin startproject DjangoAndVue 进入DjangoAndVue项目  $ cd DjangoAndVue 建立Vue项目(使用vue ui可视化命令建立)  $ vue ui 二、 完善后端项目 主root: /DjangoAndVue/
 建立后端子项目  $ django-admin startapp backend 修改连接数据库(sqlite3 -&amp;gt; mysql)   进入/DjangoAndVue/setting.py 修改DATABASES  DATABASES = { &amp;#39;default&amp;#39;:{ &amp;#39;ENGINE&amp;#39;:&amp;#39;django.db.backends.mysql&amp;#39;,#引擎名称 &amp;#39;NAME&amp;#39;:&amp;#39;django_mysql&amp;#39;,#数据库名称 &amp;#39;USER&amp;#39;: &amp;#39;root&amp;#39;, # 用户名 &amp;#39;PASSWORD&amp;#39;: &amp;#39;12345678&amp;#39;, # 密码 &amp;#39;HOST&amp;#39;: &amp;#39;127.0.0.1&amp;#39;, # HOST &amp;#39;POST&amp;#39;: 3306, # 端口 } }  进入/DjangoAndVue/init.py添加引入mysql代码  import pymysql pymysql.install_as_MySQLdb()  生成迁移文件  $ python manage.</description>
    </item>
    
    <item>
      <title>Vue2</title>
      <link>http://czr22.github.io/post/vue2.x%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Mon, 26 Jul 2021 15:45:47 +0800</pubDate>
      
      <guid>http://czr22.github.io/post/vue2.x%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</guid>
      <description>Vue基本操作  建立Vue项目  方法一： $ vue start project 方法二： $ vue ui </description>
    </item>
    
    <item>
      <title>Django基本操作</title>
      <link>http://czr22.github.io/post/django%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Mon, 26 Jul 2021 15:42:31 +0800</pubDate>
      
      <guid>http://czr22.github.io/post/django%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</guid>
      <description>Django基本操作  建立Django项目  $ django-admin startproject 项目名称 建立Django内置APP  $ django-admin startapp app名称 中间件添加(Middleware)  </description>
    </item>
    
    <item>
      <title>Git基本操作</title>
      <link>http://czr22.github.io/post/git%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Mon, 26 Jul 2021 15:12:33 +0800</pubDate>
      
      <guid>http://czr22.github.io/post/git%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</guid>
      <description>Git基本操作  git init git add . git commit -m &amp;ldquo;提交备注&amp;rdquo; git add remote origin github仓库地址 git push -u origin master  Git可能遇到的问题及解决办法 </description>
    </item>
    
    <item>
      <title>Hugo基本操作</title>
      <link>http://czr22.github.io/post/hugo%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Mon, 26 Jul 2021 15:02:08 +0800</pubDate>
      
      <guid>http://czr22.github.io/post/hugo%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</guid>
      <description>Hugo基本操作 (Hugo中文文档)  创建 .md 文件  $ hugo new post/文件名称.md 生成public目录  根目录/myblog/ $ hugo --theme=主题名称 --baseUrl=&amp;#34;http://czr22.github.io/&amp;#34; 注意，以上命令并不会生成草稿页面，如果未生成任何文章，请去掉文章头部的 draft=true 再重新生成。） 部署至github  $ cd public $ git init $ git remote add origin https://github.com/czr22/czr22.github.io.git $ git add -A $ git commit -m &amp;#34;first commit&amp;#34; $ git push -u origin master </description>
    </item>
    
  </channel>
</rss>
